<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mini-Game</title>
  <style>
    body {
      display: flex;
      flex-direction: column;
      align-items: center;
      height: 100vh;
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: #f0f0f0;
      position: relative;
      overflow: hidden; /* Prevent scroll bars */
    }

    .container {
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      text-align: center;
      margin-top: 20px;
      width: 90%;
      display: flex;
      justify-content: space-between;
      padding: 10px 20px;
    }

    h2 {
      margin-bottom: 20px;
    }

    button {
      margin: 10px;
      padding: 20px;
      border: none;
      background-color: #007bff;
      color: #fff;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.5s;
      user-select: none; /* Prevent text selection */
    }

    button:hover {
      background-color: #0056b3;
    }

    #pet-button {
      width: 210px;
      height: 210px;
      position: absolute;
      background-size: 100%; /* Scale up the image */
      background-position: center;
      background-repeat: no-repeat;
      background-color: transparent;
      border: none; /* Remove border */
    }

    .moving-button-container {
      position: relative;
      width: 90%;
      height: calc(100vh - 150px); /* Adjust height to leave space for the container */
      overflow: hidden; /* Prevent scroll bars */
      cursor: crosshair; /* Change cursor to crosshair */
    }

    .moving-button-container button {
      cursor: crosshair; /* Change cursor to crosshair */
    }
  </style>
</head>

<body>
  <div class="container">
    <h2>Mini-Game TAG</h2>
    <form action="/play" method="GET">
      <button type="submit">Back to Play</button>
    </form>
  </div>
  <div class="moving-button-container">
    <form action="/play" method="POST">
      <button id="pet-button" type="submit"></button>
    </form>
  </div>

  <script>
    const petType = '<%= pet.pet_type.toLowerCase() %>';
    let currentOutfit = '<%= pet.current_outfit %>';
    const petButton = document.getElementById('pet-button');

    function setPetImage() {
      let imagePath = `/images/${petType}`;
      if (currentOutfit && currentOutfit !== 'default') {
        switch (currentOutfit) {
          case "Top Hat":
            currentOutfit = '2';
            break;

          case "Sunglasses":
            currentOutfit = '3';
            break;

          default:
            currentOutfit = '';
            break;
        }
        imagePath += currentOutfit;
      }
      imagePath += '.png';
      console.log('Image Path:', imagePath); // Log the image path for debugging
      petButton.style.backgroundImage = `url('${imagePath}')`;
    }

    setPetImage();

    let normalSpeed = true;

    function moveButton() {
      const button = document.getElementById('pet-button');
      const container = document.querySelector('.moving-button-container');
      const maxX = container.clientWidth - button.offsetWidth - 75;
      const maxY = container.clientHeight - button.offsetHeight - 75;
      const randomX = Math.floor(Math.random() * maxX) + 75;
      const randomY = Math.floor(Math.random() * maxY) + 75;
      const randomSpeed = (Math.random() * 2 + 0.5) * (normalSpeed ? 1 : 0.5); // Speed between 0.5s and 2.5s, faster when clicked

      button.style.transitionDuration = `${randomSpeed}s`;
      button.style.transform = `translate(${randomX}px, ${randomY}px)`;

      // Reset speed to normal after moving
      normalSpeed = true;
    }

    document.getElementById('pet-button').addEventListener('click', (event) => {
      event.preventDefault(); // Prevent form submission
      const button = event.target;
      const container = document.querySelector('.moving-button-container');
      const maxX = container.clientWidth - button.offsetWidth - 75;
      const maxY = container.clientHeight - button.offsetHeight - 75;
      const randomX = Math.floor(Math.random() * maxX) + 75;
      const randomY = Math.floor(Math.random() * maxY) + 75;

      button.style.transitionDuration = '0s';
      button.style.transform = `translate(${randomX}px, ${randomY}px)`; // Move to random resting position
      normalSpeed = false; // Increase speed temporarily
      setTimeout(moveButton, 1); // Move again immediately

      // Make AJAX request to update coins
      fetch('/play', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      }).then(response => {
        if (response.ok) {
          console.log('Coins updated successfully');
        } else {
          console.error('Failed to update coins');
        }
      }).catch(error => {
        console.error('Error:', error);
      });
    });

    setInterval(moveButton, 2000); // Move every 2 seconds
  </script>
</body>

</html>